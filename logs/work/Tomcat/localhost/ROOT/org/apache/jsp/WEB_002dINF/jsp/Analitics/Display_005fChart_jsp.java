/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2020-08-14 14:49:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.Analitics;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Arrays;

public final class Display_005fChart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/jsp/Analitics/../../resources/css/common.css", Long.valueOf(1596632272607L));
    _jspx_dependants.put("jar:file:/C:/Users/gce/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
    _jspx_dependants.put("jar:file:/C:/Users/gce/.m2/repository/org/springframework/spring-webmvc/5.0.11.RELEASE/spring-webmvc-5.0.11.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1543325904000L));
    _jspx_dependants.put("file:/C:/Users/gce/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1571152422633L));
    _jspx_dependants.put("file:/C:/Users/gce/.m2/repository/org/springframework/spring-webmvc/5.0.11.RELEASE/spring-webmvc-5.0.11.RELEASE.jar", Long.valueOf(1595858777948L));
    _jspx_dependants.put("/WEB-INF/jsp/Analitics/../../resources/js/reportfunctions.js", Long.valueOf(1596716082085L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Arrays");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"ISO-8859-1\">\r\n");
      out.write("\t<title>Line Chart</title>\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://canvasjs.com/assets/script/canvasjs.min.js\"></script>\r\n");
      out.write("\t<style>");
      out.write("body {\r\n");
      out.write("    padding-bottom: 40px;\r\n");
      out.write("    background-color: #eee;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("hr {\r\n");
      out.write("  border: 0;\r\n");
      out.write("  clear:both;\r\n");
      out.write("  display:block;\r\n");
      out.write("  width: 96%;               \r\n");
      out.write("  height: 1px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the header */\r\n");
      out.write(".headder{\r\n");
      out.write("    padding-bottom: 5px;\r\n");
      out.write("    padding-left: 20px;\r\n");
      out.write("    padding-right: 10px;\r\n");
      out.write("\tbackground-color: #CE2B1C;\t\r\n");
      out.write("\tborder-style: outset;\r\n");
      out.write("\tborder-radius: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the corporate logo */\r\n");
      out.write("p.c {\r\n");
      out.write("\tcolor: gold;\r\n");
      out.write("  \tfont-style: oblique;\r\n");
      out.write("  \tpadding-left: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*Standard user input format */\r\n");
      out.write(".form-signin {\r\n");
      out.write("    max-width: 330px;\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-signin .form-signin-heading,\r\n");
      out.write(".form-signin .checkbox {\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-signin .checkbox {\r\n");
      out.write("    font-weight: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-signin .form-control {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    height: auto;\r\n");
      out.write("    -webkit-box-sizing: border-box;\r\n");
      out.write("    -moz-box-sizing: border-box;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-signin .form-control:focus {\r\n");
      out.write("    z-index: 2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-signin input {\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("    border-bottom-right-radius: 0;\r\n");
      out.write("    border-bottom-left-radius: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-signin button {\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".has-error {\r\n");
      out.write("    color: red\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*Main Page Layout format*/\r\n");
      out.write("main{\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth:950px;\r\n");
      out.write("\tpadding-top: 5px;\r\n");
      out.write("\tpadding-left: 30px;\r\n");
      out.write("\tpadding-right: 20px;\r\n");
      out.write("\t\r\n");
      out.write("\tborder-right: 1px solid black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("aside{\r\n");
      out.write("\tfloat:right;\r\n");
      out.write("\twidth:350px;\r\n");
      out.write("\tpadding-bottom:20px;\r\n");
      out.write("\tpadding-left: 4px;\r\n");
      out.write("\tpadding-right: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("footer{\r\n");
      out.write("\tclear:both;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("\tfont-size:.8em;\r\n");
      out.write("\tpadding-top:50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#container, footer{\r\n");
      out.write("\twidth:90%;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\tmargin-bottom: 60px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("aside section {\r\n");
      out.write("\tdisplay:block;\r\n");
      out.write("\tpadding: 20px;\r\n");
      out.write("\tborder-bottom: 1px solid black;\r\n");
      out.write("\tcolor:black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*Display Data Page*/\r\n");
      out.write("/* To make the buttons look like hyperlink words in a normal sentence I modified a button style from the CSS style guide:\r\n");
      out.write("\thttps://www.w3schools.com/howto/howto_css_text_buttons.asp*/\r\n");
      out.write(".astext {\r\n");
      out.write("    background:none;\r\n");
      out.write("    border:none;\r\n");
      out.write("    margin:0;\r\n");
      out.write("    padding:0;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write(".astext:hover {background: #eee;}\r\n");
      out.write("\r\n");
      out.write(".Calculate {color: dodgerblue;}\r\n");
      out.write(".Restart {color: orange;}\r\n");
      out.write("\r\n");
      out.write("fieldset { position: relative; padding: 0.35em 0.625em 0.75em; }\r\n");
      out.write(".legend2 { position: absolute; bottom: -1.4ex; left: 10px; background: white  }\r\n");
      out.write("caption, .legend2 { padding: 0 2px }\r\n");
      out.write("\r\n");
      out.write("#message{\r\n");
      out.write("\tbackground: #eee;\r\n");
      out.write("\tfont-size: 12pt;\r\n");
      out.write("}\r\n");
      out.write("#tital1{\r\n");
      out.write("\tpadding-left: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".display{\r\n");
      out.write("\tpadding-left: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".Populate{\r\n");
      out.write("\tpadding-left: 20px\r\n");
      out.write("}\r\n");
      out.write("#intro{\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfont-size: large;\r\n");
      out.write("}\r\n");
      out.write("#arrayDisply{\r\n");
      out.write("\tpadding-left: 90px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("fieldset\r\n");
      out.write("{\r\n");
      out.write("  background-color:#CCC;\r\n");
      out.write("  max-width:700px;\r\n");
      out.write("  padding:16px;\t\r\n");
      out.write("      border:2px black;\r\n");
      out.write("    -moz-border-radius:8px;\r\n");
      out.write("    -webkit-border-radius:8px;\t\r\n");
      out.write("    border-radius:8px;\t\r\n");
      out.write("}\r\n");
      out.write(".legend1\r\n");
      out.write("{\r\n");
      out.write("  margin-bottom:0px;\r\n");
      out.write("  margin-left:16px;\r\n");
      out.write("}\r\n");
      out.write(".legend2\r\n");
      out.write("{\r\n");
      out.write("\tbackground:transparent;\r\n");
      out.write("  margin-bottom:0px;\r\n");
      out.write("  margin-left:16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*Display record Page*/\r\n");
      out.write(".printResult{\r\n");
      out.write("\tpadding-top:5px;\r\n");
      out.write("\tpadding-left: 145px;\r\n");
      out.write("\tpadding-right: 145px;\r\n");
      out.write("}\r\n");
      out.write("#UserChoice1{\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("#sizecontroll{\r\n");
      out.write("\tpadding-right: 400px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*Display Table*/\r\n");
      out.write(".SearchStatement{\r\n");
      out.write("\tpadding-left: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#MasterTable {\r\n");
      out.write("  \t\tfont-family: arial, sans-serif;\r\n");
      out.write("  \t\tborder: 2px solid black;\r\n");
      out.write("  \t\twidth: 95%;\r\n");
      out.write("  \t\tmargin-left: 2.5%; \r\n");
      out.write("    \tmargin-right: 2.5%;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("#tital2{text-align: center;}\r\n");
      out.write("#FailedResult{\r\n");
      out.write("\t\twidth: 30%;\r\n");
      out.write("  \t\tmargin-left: 35%; \r\n");
      out.write("    \tmargin-right: 35%;\r\n");
      out.write("    \ttext-align: center; \r\n");
      out.write("    \tcolor: red;\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#Searchbar{\r\n");
      out.write("\t\twidth: 30%;\r\n");
      out.write("  \t\tmargin-left: 35%; \r\n");
      out.write("    \tmargin-right: 35%; \t\r\n");
      out.write("}\r\n");
      out.write("#searcline{width: 83%;}\r\n");
      out.write("\r\n");
      out.write(".BuildTepfile{\r\n");
      out.write("\tpadding-left: 15px;\r\n");
      out.write("\tpadding-right: 280px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*Modal format*/\r\n");
      out.write(".modal-content{background: #eee;}\r\n");
      out.write(".modal-title{float: left;}\r\n");
      out.write("#SearchParamiters{float: right}\r\n");
      out.write("  textarea.window {\r\n");
      out.write("  \tbackground: #eee;\r\n");
      out.write("    display: block;\r\n");
      out.write("    border: none;\r\n");
      out.write("    margin-left: auto;\r\n");
      out.write("    margin-right: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#saveandnew{\r\n");
      out.write("\tpadding-left: 260px;\r\n");
      out.write("}\r\n");
      out.write("#spacer{\r\n");
      out.write("\tpadding-left: 120px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*Chart format Display settings*/\r\n");
      out.write("/*To center an element vertically, I adopted a solution from the CSS style guide:\r\n");
      out.write("\thttps://www.w3.org/Style/Examples/007/center.en.html*/\r\n");
      out.write(".main-display {\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("}\r\n");
      out.write(".column {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tmargin: 10px 10px 10px 10px;\r\n");
      out.write("\twidth: 47%;\t\r\n");
      out.write("}\r\n");
      out.write(".item {\r\n");
      out.write("\twidth: 85%;\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tmargin-left: auto;\r\n");
      out.write("\tmargin-right: auto;\r\n");
      out.write("\tmin-height: 300px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Style the Report footer */\r\n");
      out.write("footer2{\t\r\n");
      out.write("\twidth: 98%;\r\n");
      out.write("\tbackground-color: Gray;\r\n");
      out.write("\tpadding: 15px;\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tborder: solid 1px black;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write(".container button{display: inline-block;}\r\n");
      out.write("#btn1{ float:left;}\r\n");
      out.write("#btn3{ float:right;}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\t<script>");
      out.write("/*!\r\n");
      out.write(" * JavaScript Methods (https://github.com/Aaron-Larch/Websight-Protobuild)\r\n");
      out.write(" * Copyright 2020-2025 GCE, Inc.\r\n");
      out.write(" * Created by Aaron Larch\r\n");
      out.write(" */\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("\t// Get a modal\r\n");
      out.write("\tthis.loadModal = function(input){\r\n");
      out.write("\t\t$(\"#AssineParamiters\").modal().on('shown.bs.modal', function (e) {loadValues(\".PopUpModal\", \".CreateNewRecord\", input)});\r\n");
      out.write("\t\tload_page('/WEB-INF/ModelLibrary.jsp #container');\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.getModal = function(){\r\n");
      out.write("\t\t$(\"#CreateNewRecord\").modal().on('shown.bs.modal');\r\n");
      out.write("\t\tload_page('/WEB-INF/ModelLibrary.jsp #container');\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\t//function to call popup window\r\n");
      out.write("\tthis.loadPopUp =function (input){\r\n");
      out.write("\t\t$(\"#PopUpModal\").modal().on('shown.bs.modal', function (e) {loadContent(input);});\r\n");
      out.write("\t\tload_page('/WEB-INF/ModelLibrary.jsp #container');\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\t//Switch states button\r\n");
      out.write("\tthis.SwichLoadout= function(a){\r\n");
      out.write("\t\tif(a==1){\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll(\".Populate\"), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll(\".display\"), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll(\".Populate\"), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll('.display'), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\t//Check all function\r\n");
      out.write("\tthis.checkAll=function(source) {\r\n");
      out.write("\t\t  checkboxes = document.getElementsByName('operation');\r\n");
      out.write("\t\t  for(var i=0; i<checkboxes.length; i++) {\r\n");
      out.write("\t\t    checkboxes[i].checked = source.checked;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.renderChart();\r\n");
      out.write("})\t\r\n");
      out.write("\r\n");
      out.write("function load_page(url){$('modal-isi-body').load(url) ;}\r\n");
      out.write("\r\n");
      out.write("//Display a combination of classes based of a given variabule\r\n");
      out.write("function loadValues(class1, class2, flag){\r\n");
      out.write("\tif(flag==\"page1\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class1), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t}else if(flag==\"page2\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class2), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//Select a string from an array of strings based on user input \r\n");
      out.write("function loadContent(input) {\r\n");
      out.write("\tdocument.getElementById(\"Display\").value = \"\";\r\n");
      out.write("\t//convert string into an array of strings\r\n");
      out.write("\tvar JsArray = document.getElementById('DisplayValue').innerHTML;\r\n");
      out.write("\tvar block = JsArray.substring(1, JsArray.length-1);\r\n");
      out.write("\tvar string = block.split(\"break\");\r\n");
      out.write("\tif(input > 0){ //Search array\r\n");
      out.write("\t\tvar quickfix=string[input].substring(2, string[input].length);\r\n");
      out.write("\t\tdocument.getElementById('Display').value=quickfix;\r\n");
      out.write("\t}else{document.getElementById('Display').value=string[input];}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//create a select function for multiple classes that are on one page. Do not know if this is a good Idea. but it will lower file count\r\n");
      out.write("function loadChannel(cl1, cl2, cl3, cl4, flag){\r\n");
      out.write("\tif(flag==\"Step1\"){ //set flag values for each class\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t}else if(flag==\"Step2\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t}else if(flag==\"Step3\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//Create a bunch of objects at ones to make a graphics page\r\n");
      out.write("function buildReport(\r\n");
      out.write("\t\txAxsis,\r\n");
      out.write("\t\tbellData,\r\n");
      out.write("\t\thighData,\r\n");
      out.write("\t\tlowData,\r\n");
      out.write("\t\tboxData,\r\n");
      out.write("\t\tbarXAxis,\r\n");
      out.write("\t\tHistogramData) {\r\n");
      out.write("\t/*Chart program layouts as found on https://www.chartjs.org/samples/latest/*/\r\n");
      out.write("\t new Chart(\"BellcurveChart\", {\r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: xAxsis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: bellData,\r\n");
      out.write("\t\t        //set a dynamic title card\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Bell Curve Graph'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t new Chart(\"HighLineGraph\", {\r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: xAxsis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: highData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Data Graph from high to low'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t new Chart(\"LowLineGraph\", {\r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: xAxsis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: lowData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Data Graph from low to high'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t new Chart(\"HistogramChart\", {\r\n");
      out.write("\t\t  type: 'bar',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: barXAxis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: HistogramData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Histogram Chart'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t var chart = new CanvasJS.Chart(\"BoxandWhisker\", {\r\n");
      out.write("\t\t\ttitle:{\r\n");
      out.write("\t\t\t\ttext: \"Box And Whisker Plot\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\taxisY: {\r\n");
      out.write("\t\t\t\tinterval: 40\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdata: [{\r\n");
      out.write("\t\t\t\ttype: \"boxAndWhisker\",\r\n");
      out.write("\t\t\t\tupperBoxColor: \"#FFC28D\",\r\n");
      out.write("\t\t\t\tlowerBoxColor: \"#9ECCB8\",\r\n");
      out.write("\t\t\t\tcolor: \"black\",\r\n");
      out.write("\t\t\t\tdataPoints: [\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t{ label: document.getElementById(\"divName\").innerHTML, y: boxData }\r\n");
      out.write("\t\t\t\t]\r\n");
      out.write("\t\t\t}]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tchart.render();\r\n");
      out.write("}\r\n");
      out.write("//Take a canvas object and format it to fit in a div\r\n");
      out.write("function chartslide(data, ChartId){\r\n");
      out.write("\t$(document).ready(function(){renderChart(data, ChartId);});//populate a chart object\r\n");
      out.write("\tvar canvas = document.querySelector('canvas');\r\n");
      out.write("\tfitToContainer(canvas);\r\n");
      out.write("\r\n");
      out.write("\t//by setting the canvas ID to a variabule you can duplacate this image quite easaly\r\n");
      out.write("\tfunction renderChart(input, picture) {\r\n");
      out.write("\t\t/*Chart program layouts as found on https://www.chartjs.org/samples/latest/*/\r\n");
      out.write("\t\tvar chart = new Chart(picture, { \r\n");
      out.write("\t\t\ttype: 'line',\r\n");
      out.write("\t\t\t\tdata: {\r\n");
      out.write("\t\t\t\t\tlabels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\r\n");
      out.write("\t\t\t\t\tdatasets: [{ \r\n");
      out.write("\t\t\t\t\t\tdata: input,\r\n");
      out.write("\t\t\t\t\t\tlabel: 'My first dataset',\r\n");
      out.write("\t\t\t\t\t\tborderColor: \"#3e95cd\",\r\n");
      out.write("\t\t\t\t\t\tfill: false\r\n");
      out.write("\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\toptions: {\r\n");
      out.write("\t\t\t\t\ttitle: {\r\n");
      out.write("\t\t\t\t\t\tdisplay: true,\r\n");
      out.write("\t\t\t\t\t\ttext: 'This site can also track Large volumes of data over time and place them into graphs using CharJS software'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\tchart.render();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction fitToContainer(canvas){\r\n");
      out.write("\t\t// Make it visually fill the positioned parent\r\n");
      out.write("\t\tcanvas.style.width ='100%';\r\n");
      out.write("\t\tcanvas.style.height='100%';\r\n");
      out.write("\t\t// ...then set the internal size to match\r\n");
      out.write("\t\tcanvas.width  = canvas.offsetWidth;\r\n");
      out.write("\t\tcanvas.height = canvas.offsetHeight;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("function AnimateSlide(){\r\n");
      out.write("\tvar Index = 0;\r\n");
      out.write("\tcarousel();\r\n");
      out.write("\r\n");
      out.write("\t//set all but one of the slides to hidden\r\n");
      out.write("\tfunction carousel() {\r\n");
      out.write("\t\tvar i;\r\n");
      out.write("\t\tvar x = document.getElementsByClassName(\"ProductSlides\");\r\n");
      out.write("\t\tfor (i = 0; i < x.length; i++) {\r\n");
      out.write("\t\t\tx[i].style.display = \"none\";  \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tIndex++;\r\n");
      out.write("\t\tif (Index > x.length) {Index = 1} //counter reset\r\n");
      out.write("\t\tx[Index-1].style.display = \"block\";  \r\n");
      out.write("\t\tsetTimeout(carousel, 4000); // Change image every 4 seconds\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function openNav() { \r\n");
      out.write("\t//set nav bar to open \r\n");
      out.write("\tdocument.getElementById(\"mySidenav\").style.width = \"250px\";//triggers animation effect\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function closeNav() { \r\n");
      out.write("\t//set nav bar close\r\n");
      out.write("\tdocument.getElementById(\"mySidenav\").style.width = \"0\";//triggers animation effect\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//Just like close nav only set to hight.\r\n");
      out.write("function closebox() {\r\n");
      out.write("\tdocument.getElementById(\"myDropdown\").style.height = \"0\";//triggers animation effect\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("function switchStateBtn(input){\r\n");
      out.write("\tcloseNav();//close nav bar before running class setting function\r\n");
      out.write("\tloadChannel(\".services\", \".slideshow\", \".partners\", \".AboutSite\", input);//call class selector\r\n");
      out.write("}\r\n");
      out.write("function plusDivs(n) {\r\n");
      out.write("\tclosebox();//run closing animation\r\n");
      out.write("\tsetTimeout(function(){showDivs(slideIndex += n);}, 800);//set timer before moving to next slide\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function currentDiv(n) {\r\n");
      out.write("\tclosebox();//run closing animation\r\n");
      out.write("\tsetTimeout(function(){showDivs(slideIndex = n);}, 800);//save slide posision\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showDivs(n) {\r\n");
      out.write("\tvar i;\r\n");
      out.write("\tvar x = document.getElementsByClassName(\"mySlides\");//set slide list to var\r\n");
      out.write("\tvar dots = document.getElementsByClassName(\"demo\");//set dadge list to var\r\n");
      out.write("\tif (n > x.length) {slideIndex = 1} //counter reset\r\n");
      out.write("\tif (n < 1) {slideIndex = x.length} //set flag so that when hitting back on the fist slide takes you to the last slide\r\n");
      out.write("\t\r\n");
      out.write("\t//hide all slides\r\n");
      out.write("\tfor (i = 0; i < x.length; i++) {\r\n");
      out.write("\t\tx[i].style.display = \"none\";  \r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//clear all badge backgrounds\r\n");
      out.write("\tfor (i = 0; i < dots.length; i++) {\r\n");
      out.write("\t\tdots[i].className = dots[i].className.replace(\" dotFill\", \"\");\r\n");
      out.write("\t}\r\n");
      out.write("\tx[slideIndex-1].style.display = \"block\"; //show selected slide\r\n");
      out.write("\tdots[slideIndex-1].className += \" dotFill\"; //fill animated badge\r\n");
      out.write("\topenbox(slideIndex-1);//trigger box animation\r\n");
      out.write(" \r\n");
      out.write("\t//open text box animation\r\n");
      out.write("\tfunction openbox(place) {\r\n");
      out.write("\t\tdocument.getElementById(\"myDropdown\").style.height = \"200px\";//triggers animation effect\r\n");
      out.write("\t\tdocument.getElementById(\"message\").innerHTML = document.getElementById(\"StoreData\"+place).innerHTML;//select proper text\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function PageSetUp(sidenav, slideIndex, input){\r\n");
      out.write("\t//load Javascript functions for page\r\n");
      out.write("\tAnimateSlide();\r\n");
      out.write("\tshowDivs(slideIndex);\r\n");
      out.write("\tchartslide(input, \"chartContainer\");\r\n");
      out.write("\tchartslide(input, \"chartClone\");\r\n");
      out.write("\t\r\n");
      out.write("\t//This is a two part method to have the sidenav close when the user clicks off the winow\r\n");
      out.write("\t$('html').click(function( event) {\r\n");
      out.write("\t\t var a  = event.target;\r\n");
      out.write("\t\t var checkopen = sidenav.style.width //Check if sideNav is open\r\n");
      out.write("\t\t //negate clicking on the menu itself\r\n");
      out.write("\t\t if(a !== sidenav && checkopen !== \"0\"){\r\n");
      out.write("\t\t\t closeNav(); //  Hide the sidebar\r\n");
      out.write("\t\t }\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$('#Openmenue').click(function(event){\r\n");
      out.write("\t    event.stopPropagation(); // prevents executing the above event\r\n");
      out.write("\t});\r\n");
      out.write("}");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- Report Headers Object to tell the viewer which object is being viewed   -->\r\n");
      out.write("\t <div id=\"header\" style=\"text-align:center\">\r\n");
      out.write("\t  ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\t<h1>Graphs Generated for the object: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Label}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\t<div id=\"divName\" style=\"display: none;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Label}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- main object for charts organization  -->\r\n");
      out.write("\t<div class=\"main-display\">\r\n");
      out.write("\t\t<!--Main report information, Bell curve Chart and Histogram Chart object  -->\r\n");
      out.write("\t\t<div class=\"column\">\r\n");
      out.write("\t\t\t<textarea class=\"item\" id=\"message\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("\t\t\t<canvas class=\"item\" id=\"BellcurveChart\"></canvas>\r\n");
      out.write("\t\t\t<canvas class=\"item\" id=\"HistogramChart\"></canvas>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- High Line Graph, Low Line Graph, Box and Whisker Chart object -->\r\n");
      out.write("\t\t<div class=\"column\">\r\n");
      out.write("\t\t\t<canvas class=\"item\" id=\"HighLineGraph\"></canvas>\r\n");
      out.write("\t\t\t<canvas class=\"item\" id=\"LowLineGraph\"></canvas>\r\n");
      out.write("\t\t\t<div class=\"item\" id=\"BoxandWhisker\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<script>\r\n");
      out.write("\t/*Collect all the requierd variabuls*/\r\n");
      out.write("\twindow.onload = function () {buildReport(\r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Arrays.toString(Xaxis)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(", \r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Arrays.toString(BellCurveGraph)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(", \r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Arrays.toString(YaxisHigh)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(", \r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Arrays.toString(YaxisLow)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(", \r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Arrays.toString(BoxAndWhiskersGraph)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(", \r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Arrays.deepToString(BarGraph)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(", \r\n");
      out.write("\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Arrays.toString(Histogram)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t)}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("<!-- Links to other objects Chart pages -->\r\n");
      out.write("<footer2>\r\n");
      out.write("\t");
      if (_jspx_meth_spring_005furl_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t<form id=\"Servlet\" method=\"GET\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ScrollURL }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" >\r\n");
      out.write("\t\t<button type=\"submit\" id=\"btn1\" name=\"action\" value=\"-1\">Back</button>\r\n");
      out.write("\t\t<button type=\"submit\" id=\"btn3\" name=\"action\" value=\"1\">Next</button>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<!-- Save information and close the current project-->\r\n");
      out.write("\t<form action=\"FinalPagePrintFile\" id=\"Servlet2\" method=\"get\">\r\n");
      out.write("\t\t<input type=\"submit\" id=\"btn2\" name=\"action\" value=\"Print File\"/>\r\n");
      out.write("\t</form>\r\n");
      out.write("</footer2>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/jsp/Analitics/Display_Chart.jsp(18,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.userPrincipal.name != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("        <form id=\"logoutForm\" method=\"POST\" action=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/logout\">\r\n");
          out.write("            <input type=\"hidden\" name=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"/>\r\n");
          out.write("        </form>\r\n");
          out.write("        <h2> ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.userPrincipal.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" | <a onclick=\"document.forms['logoutForm'].submit()\">Logout</a></h2>\r\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:url
    org.springframework.web.servlet.tags.UrlTag _jspx_th_spring_005furl_005f0 = (org.springframework.web.servlet.tags.UrlTag) _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.get(org.springframework.web.servlet.tags.UrlTag.class);
    boolean _jspx_th_spring_005furl_005f0_reused = false;
    try {
      _jspx_th_spring_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005furl_005f0.setParent(null);
      // /WEB-INF/jsp/Analitics/Display_Chart.jsp(59,1) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f0.setValue("/Stats/chart");
      // /WEB-INF/jsp/Analitics/Display_Chart.jsp(59,1) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f0.setVar("ScrollURL");
      int[] _jspx_push_body_count_spring_005furl_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005furl_005f0 = _jspx_th_spring_005furl_005f0.doStartTag();
        if (_jspx_th_spring_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005furl_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005furl_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005furl_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_spring_005furl_005f0);
      _jspx_th_spring_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005furl_005f0_reused);
    }
    return false;
  }
}
