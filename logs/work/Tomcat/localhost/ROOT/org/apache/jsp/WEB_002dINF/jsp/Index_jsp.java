/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2020-08-14 14:28:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Arrays;

public final class Index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:substringBefore", org.apache.taglibs.standard.functions.Functions.class, "substringBefore", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("/WEB-INF/jsp/../resources/js/reportfunctions.js", Long.valueOf(1596716082085L));
    _jspx_dependants.put("/WEB-INF/jsp/../resources/css/HomePage.css", Long.valueOf(1596632272607L));
    _jspx_dependants.put("jar:file:/C:/Users/gce/.m2/repository/org/springframework/spring-webmvc/5.0.11.RELEASE/spring-webmvc-5.0.11.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1543325904000L));
    _jspx_dependants.put("jar:file:/C:/Users/gce/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
    _jspx_dependants.put("jar:file:/C:/Users/gce/.m2/repository/org/springframework/spring-webmvc/5.0.11.RELEASE/spring-webmvc-5.0.11.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1543325904000L));
    _jspx_dependants.put("file:/C:/Users/gce/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1571152422633L));
    _jspx_dependants.put("file:/C:/Users/gce/.m2/repository/org/springframework/spring-webmvc/5.0.11.RELEASE/spring-webmvc-5.0.11.RELEASE.jar", Long.valueOf(1595858777948L));
    _jspx_dependants.put("jar:file:/C:/Users/gce/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153399482000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Arrays");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fend_005fbegin;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fend_005fbegin.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<html>\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write(" \r\n");
      out.write("<head>\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\t<title>JBA Shipping inc.</title>\r\n");
      out.write("\t<script>");
      out.write("/*!\r\n");
      out.write(" * JavaScript Methods (https://github.com/Aaron-Larch/Websight-Protobuild)\r\n");
      out.write(" * Copyright 2020-2025 GCE, Inc.\r\n");
      out.write(" * Created by Aaron Larch\r\n");
      out.write(" */\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("\t// Get a modal\r\n");
      out.write("\tthis.loadModal = function(input){\r\n");
      out.write("\t\t$(\"#AssineParamiters\").modal().on('shown.bs.modal', function (e) {loadValues(\".PopUpModal\", \".CreateNewRecord\", input)});\r\n");
      out.write("\t\tload_page('/WEB-INF/ModelLibrary.jsp #container');\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.getModal = function(){\r\n");
      out.write("\t\t$(\"#CreateNewRecord\").modal().on('shown.bs.modal');\r\n");
      out.write("\t\tload_page('/WEB-INF/ModelLibrary.jsp #container');\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\t//function to call popup window\r\n");
      out.write("\tthis.loadPopUp =function (input){\r\n");
      out.write("\t\t$(\"#PopUpModal\").modal().on('shown.bs.modal', function (e) {loadContent(input);});\r\n");
      out.write("\t\tload_page('/WEB-INF/ModelLibrary.jsp #container');\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\t//Switch states button\r\n");
      out.write("\tthis.SwichLoadout= function(a){\r\n");
      out.write("\t\tif(a==1){\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll(\".Populate\"), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll(\".display\"), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll(\".Populate\"), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll('.display'), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\t//Check all function\r\n");
      out.write("\tthis.checkAll=function(source) {\r\n");
      out.write("\t\t  checkboxes = document.getElementsByName('operation');\r\n");
      out.write("\t\t  for(var i=0; i<checkboxes.length; i++) {\r\n");
      out.write("\t\t    checkboxes[i].checked = source.checked;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.renderChart();\r\n");
      out.write("})\t\r\n");
      out.write("\r\n");
      out.write("function load_page(url){$('modal-isi-body').load(url) ;}\r\n");
      out.write("\r\n");
      out.write("//Display a combination of classes based of a given variabule\r\n");
      out.write("function loadValues(class1, class2, flag){\r\n");
      out.write("\tif(flag==\"page1\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class1), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t}else if(flag==\"page2\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class2), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//Select a string from an array of strings based on user input \r\n");
      out.write("function loadContent(input) {\r\n");
      out.write("\tdocument.getElementById(\"Display\").value = \"\";\r\n");
      out.write("\t//convert string into an array of strings\r\n");
      out.write("\tvar JsArray = document.getElementById('DisplayValue').innerHTML;\r\n");
      out.write("\tvar block = JsArray.substring(1, JsArray.length-1);\r\n");
      out.write("\tvar string = block.split(\"break\");\r\n");
      out.write("\tif(input > 0){ //Search array\r\n");
      out.write("\t\tvar quickfix=string[input].substring(2, string[input].length);\r\n");
      out.write("\t\tdocument.getElementById('Display').value=quickfix;\r\n");
      out.write("\t}else{document.getElementById('Display').value=string[input];}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//create a select function for multiple classes that are on one page. Do not know if this is a good Idea. but it will lower file count\r\n");
      out.write("function loadChannel(cl1, cl2, cl3, cl4, flag){\r\n");
      out.write("\tif(flag==\"Step1\"){ //set flag values for each class\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t}else if(flag==\"Step2\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t}else if(flag==\"Step3\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//Create a bunch of objects at ones to make a graphics page\r\n");
      out.write("function buildReport(\r\n");
      out.write("\t\txAxsis,\r\n");
      out.write("\t\tbellData,\r\n");
      out.write("\t\thighData,\r\n");
      out.write("\t\tlowData,\r\n");
      out.write("\t\tboxData,\r\n");
      out.write("\t\tbarXAxis,\r\n");
      out.write("\t\tHistogramData) {\r\n");
      out.write("\t/*Chart program layouts as found on https://www.chartjs.org/samples/latest/*/\r\n");
      out.write("\t new Chart(\"BellcurveChart\", {\r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: xAxsis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: bellData,\r\n");
      out.write("\t\t        //set a dynamic title card\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Bell Curve Graph'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t new Chart(\"HighLineGraph\", {\r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: xAxsis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: highData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Data Graph from high to low'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t new Chart(\"LowLineGraph\", {\r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: xAxsis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: lowData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Data Graph from low to high'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t new Chart(\"HistogramChart\", {\r\n");
      out.write("\t\t  type: 'bar',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: barXAxis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: HistogramData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Histogram Chart'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t var chart = new CanvasJS.Chart(\"BoxandWhisker\", {\r\n");
      out.write("\t\t\ttitle:{\r\n");
      out.write("\t\t\t\ttext: \"Box And Whisker Plot\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\taxisY: {\r\n");
      out.write("\t\t\t\tinterval: 40\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdata: [{\r\n");
      out.write("\t\t\t\ttype: \"boxAndWhisker\",\r\n");
      out.write("\t\t\t\tupperBoxColor: \"#FFC28D\",\r\n");
      out.write("\t\t\t\tlowerBoxColor: \"#9ECCB8\",\r\n");
      out.write("\t\t\t\tcolor: \"black\",\r\n");
      out.write("\t\t\t\tdataPoints: [\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t{ label: document.getElementById(\"divName\").innerHTML, y: boxData }\r\n");
      out.write("\t\t\t\t]\r\n");
      out.write("\t\t\t}]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tchart.render();\r\n");
      out.write("}\r\n");
      out.write("//Take a canvas object and format it to fit in a div\r\n");
      out.write("function chartslide(data, ChartId){\r\n");
      out.write("\t$(document).ready(function(){renderChart(data, ChartId);});//populate a chart object\r\n");
      out.write("\tvar canvas = document.querySelector('canvas');\r\n");
      out.write("\tfitToContainer(canvas);\r\n");
      out.write("\r\n");
      out.write("\t//by setting the canvas ID to a variabule you can duplacate this image quite easaly\r\n");
      out.write("\tfunction renderChart(input, picture) {\r\n");
      out.write("\t\t/*Chart program layouts as found on https://www.chartjs.org/samples/latest/*/\r\n");
      out.write("\t\tvar chart = new Chart(picture, { \r\n");
      out.write("\t\t\ttype: 'line',\r\n");
      out.write("\t\t\t\tdata: {\r\n");
      out.write("\t\t\t\t\tlabels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\r\n");
      out.write("\t\t\t\t\tdatasets: [{ \r\n");
      out.write("\t\t\t\t\t\tdata: input,\r\n");
      out.write("\t\t\t\t\t\tlabel: 'My first dataset',\r\n");
      out.write("\t\t\t\t\t\tborderColor: \"#3e95cd\",\r\n");
      out.write("\t\t\t\t\t\tfill: false\r\n");
      out.write("\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\toptions: {\r\n");
      out.write("\t\t\t\t\ttitle: {\r\n");
      out.write("\t\t\t\t\t\tdisplay: true,\r\n");
      out.write("\t\t\t\t\t\ttext: 'This site can also track Large volumes of data over time and place them into graphs using CharJS software'\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\tchart.render();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction fitToContainer(canvas){\r\n");
      out.write("\t\t// Make it visually fill the positioned parent\r\n");
      out.write("\t\tcanvas.style.width ='100%';\r\n");
      out.write("\t\tcanvas.style.height='100%';\r\n");
      out.write("\t\t// ...then set the internal size to match\r\n");
      out.write("\t\tcanvas.width  = canvas.offsetWidth;\r\n");
      out.write("\t\tcanvas.height = canvas.offsetHeight;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("function AnimateSlide(){\r\n");
      out.write("\tvar Index = 0;\r\n");
      out.write("\tcarousel();\r\n");
      out.write("\r\n");
      out.write("\t//set all but one of the slides to hidden\r\n");
      out.write("\tfunction carousel() {\r\n");
      out.write("\t\tvar i;\r\n");
      out.write("\t\tvar x = document.getElementsByClassName(\"ProductSlides\");\r\n");
      out.write("\t\tfor (i = 0; i < x.length; i++) {\r\n");
      out.write("\t\t\tx[i].style.display = \"none\";  \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tIndex++;\r\n");
      out.write("\t\tif (Index > x.length) {Index = 1} //counter reset\r\n");
      out.write("\t\tx[Index-1].style.display = \"block\";  \r\n");
      out.write("\t\tsetTimeout(carousel, 4000); // Change image every 4 seconds\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function openNav() { \r\n");
      out.write("\t//set nav bar to open \r\n");
      out.write("\tdocument.getElementById(\"mySidenav\").style.width = \"250px\";//triggers animation effect\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function closeNav() { \r\n");
      out.write("\t//set nav bar close\r\n");
      out.write("\tdocument.getElementById(\"mySidenav\").style.width = \"0\";//triggers animation effect\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//Just like close nav only set to hight.\r\n");
      out.write("function closebox() {\r\n");
      out.write("\tdocument.getElementById(\"myDropdown\").style.height = \"0\";//triggers animation effect\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("function switchStateBtn(input){\r\n");
      out.write("\tcloseNav();//close nav bar before running class setting function\r\n");
      out.write("\tloadChannel(\".services\", \".slideshow\", \".partners\", \".AboutSite\", input);//call class selector\r\n");
      out.write("}\r\n");
      out.write("function plusDivs(n) {\r\n");
      out.write("\tclosebox();//run closing animation\r\n");
      out.write("\tsetTimeout(function(){showDivs(slideIndex += n);}, 800);//set timer before moving to next slide\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function currentDiv(n) {\r\n");
      out.write("\tclosebox();//run closing animation\r\n");
      out.write("\tsetTimeout(function(){showDivs(slideIndex = n);}, 800);//save slide posision\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showDivs(n) {\r\n");
      out.write("\tvar i;\r\n");
      out.write("\tvar x = document.getElementsByClassName(\"mySlides\");//set slide list to var\r\n");
      out.write("\tvar dots = document.getElementsByClassName(\"demo\");//set dadge list to var\r\n");
      out.write("\tif (n > x.length) {slideIndex = 1} //counter reset\r\n");
      out.write("\tif (n < 1) {slideIndex = x.length} //set flag so that when hitting back on the fist slide takes you to the last slide\r\n");
      out.write("\t\r\n");
      out.write("\t//hide all slides\r\n");
      out.write("\tfor (i = 0; i < x.length; i++) {\r\n");
      out.write("\t\tx[i].style.display = \"none\";  \r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//clear all badge backgrounds\r\n");
      out.write("\tfor (i = 0; i < dots.length; i++) {\r\n");
      out.write("\t\tdots[i].className = dots[i].className.replace(\" dotFill\", \"\");\r\n");
      out.write("\t}\r\n");
      out.write("\tx[slideIndex-1].style.display = \"block\"; //show selected slide\r\n");
      out.write("\tdots[slideIndex-1].className += \" dotFill\"; //fill animated badge\r\n");
      out.write("\topenbox(slideIndex-1);//trigger box animation\r\n");
      out.write(" \r\n");
      out.write("\t//open text box animation\r\n");
      out.write("\tfunction openbox(place) {\r\n");
      out.write("\t\tdocument.getElementById(\"myDropdown\").style.height = \"200px\";//triggers animation effect\r\n");
      out.write("\t\tdocument.getElementById(\"message\").innerHTML = document.getElementById(\"StoreData\"+place).innerHTML;//select proper text\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function PageSetUp(sidenav, slideIndex, input){\r\n");
      out.write("\t//load Javascript functions for page\r\n");
      out.write("\tAnimateSlide();\r\n");
      out.write("\tshowDivs(slideIndex);\r\n");
      out.write("\tchartslide(input, \"chartContainer\");\r\n");
      out.write("\tchartslide(input, \"chartClone\");\r\n");
      out.write("\t\r\n");
      out.write("\t//This is a two part method to have the sidenav close when the user clicks off the winow\r\n");
      out.write("\t$('html').click(function( event) {\r\n");
      out.write("\t\t var a  = event.target;\r\n");
      out.write("\t\t var checkopen = sidenav.style.width //Check if sideNav is open\r\n");
      out.write("\t\t //negate clicking on the menu itself\r\n");
      out.write("\t\t if(a !== sidenav && checkopen !== \"0\"){\r\n");
      out.write("\t\t\t closeNav(); //  Hide the sidebar\r\n");
      out.write("\t\t }\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$('#Openmenue').click(function(event){\r\n");
      out.write("\t    event.stopPropagation(); // prevents executing the above event\r\n");
      out.write("\t});\r\n");
      out.write("}");
      out.write("</script>\r\n");
      out.write("\t<style>");
      out.write("/*\r\n");
      out.write("-------------------------------\r\n");
      out.write("Define Slide object features\r\n");
      out.write("-------------------------------\r\n");
      out.write("*/\r\n");
      out.write("/*Wrapper class*/\r\n");
      out.write(".Site_Features_List {\r\n");
      out.write("\twidth: 1100px;\r\n");
      out.write("\theight: 350px;\r\n");
      out.write("\tleft: 8px;\r\n");
      out.write("\toverflow: hidden;/*cut out parts of the image that are not in the box*/\r\n");
      out.write("\tborder: 1px solid black;/*create black outline*/\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*Slide class*/\r\n");
      out.write(".myslides, .ProductSlides{\r\n");
      out.write("\twidth: 1100px;/*make sure slide fits in wrapper*/\r\n");
      out.write("\tobject-fit: cover;/*Set group of objects*/\r\n");
      out.write("\tdisplay: flex;/*format image to fill space*/\r\n");
      out.write("\tflex-direction: column;\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\ttransition: all 1s;/*load animation*/\r\n");
      out.write("\tborder-radius: 2px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*Define Slide text box*/\r\n");
      out.write(".SlideText {\r\n");
      out.write("\tposition: absolute;/*put on top of image*/\r\n");
      out.write("\ttop: 89%;\r\n");
      out.write("\tleft: 8px;\r\n");
      out.write("\twidth: 210px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tfont-size:20px;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("\tbackground: black;\r\n");
      out.write("\ttext-indent: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#pic{width: 100%;}/*define image resolution*/\r\n");
      out.write("\r\n");
      out.write(".ProductSlides.shifting {\r\n");
      out.write("\ttransition: right .2s ease-out;/*define slide animation*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write("-------------------------------\r\n");
      out.write("Define side navigation features\r\n");
      out.write("-------------------------------\r\n");
      out.write("*/\r\n");
      out.write(" /* The side navigation menu */\r\n");
      out.write(".sidenav {\r\n");
      out.write("\theight: 100%; /* 100% Full-height */\r\n");
      out.write("\twidth: 0; /* 0 width - change this with JavaScript */\r\n");
      out.write("\tposition: fixed; /* Stay in place */\r\n");
      out.write("\tz-index: 2; /* Stay on top of all screen elements */\r\n");
      out.write("\ttop: 0; /* Stay at the top */\r\n");
      out.write("\tleft: 0;/* Stay at the left */\r\n");
      out.write("\tbackground-color: #111; /* Black*/\r\n");
      out.write("\toverflow-x: hidden; /* Disable horizontal scroll */\r\n");
      out.write("\tpadding-top: 60px; /* Place content 60px from the top */\r\n");
      out.write("\ttransition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* The navigation menu links */\r\n");
      out.write(".sidenav a {\r\n");
      out.write("\tpadding: 8px 8px 8px 32px;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tfont-size: 25px;\r\n");
      out.write("\tcolor: #818181;\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\ttransition: 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* When you mouse over the navigation links, change their color */\r\n");
      out.write(".sidenav a:hover {color: #f1f1f1;}\r\n");
      out.write("\r\n");
      out.write("/* Position and style the close button (top right corner) */\r\n");
      out.write(".sidenav .closebtn {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\tright: 25px;\r\n");
      out.write("\tfont-size: 36px;\r\n");
      out.write("\tmargin-left: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* On smaller screens, where height is less than 450px, change the style of the sidenav (less padding and a smaller font size) */\r\n");
      out.write("@media screen and (max-height: 450px) {\r\n");
      out.write("\t.sidenav {padding-top: 15px;}\r\n");
      out.write("\t.sidenav a {font-size: 18px;}\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write("-------------------------------\r\n");
      out.write("Define Credit Class features\r\n");
      out.write("-------------------------------\r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write(".clear { clear:both; }/*Reset justification*/\r\n");
      out.write("\r\n");
      out.write("/*main credits format*/\r\n");
      out.write("#CenterLine{\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\t/*center div objects*/\r\n");
      out.write("\tmargin-left: auto;\r\n");
      out.write("\tmargin-right: auto;\r\n");
      out.write("}\r\n");
      out.write("#SubImage{\r\n");
      out.write("\t/*center div objects within relation to the centerline*/\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tmargin-left: auto;\r\n");
      out.write("\tmargin-right: auto; \r\n");
      out.write("\twidth: 80%;/*div only covers 80% of screen with*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write("-------------------------------\r\n");
      out.write("Define Interactive service objects\r\n");
      out.write("-------------------------------\r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write(".mySlides {display:none}/*hide all slides for better control with java script*/\r\n");
      out.write(" \r\n");
      out.write("/*create dimentions for a badge button object */\r\n");
      out.write(".badge {\r\n");
      out.write("\tborder-radius: 0;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tline-height: 1; /*make small so it looks more like a circle */\r\n");
      out.write("\tpadding: .375rem .5625rem;\r\n");
      out.write("\tfont-weight: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*create round edges for a badge object */\r\n");
      out.write(".badge.badge-pill {\r\n");
      out.write("\tborder-radius: 10rem;\r\n");
      out.write("\tbackground-color: transparent;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*create color for a badge object */\r\n");
      out.write(".badge.badge-outline-info {\r\n");
      out.write("\tcolor: #000000;\r\n");
      out.write("\tborder: 1px solid #000000\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*create highlight effect for badge object */\r\n");
      out.write(".badge:hover{\r\n");
      out.write("\tcursor:pointer;/*set effect to mouse curser*/\r\n");
      out.write("\tbackground-color: #A9A9A9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*create solid color class for Select effect animation */\r\n");
      out.write(".badge.dotfill{ background-color: #A9A9A9;}\r\n");
      out.write(" \r\n");
      out.write("/*define location on the slide object for the badge button object */\r\n");
      out.write(".navigation{\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbottom: 0;\r\n");
      out.write("\tleft: 40%; /*located off center to leave room for label text */\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Next & previous buttons */\r\n");
      out.write(".prev, .next {\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tposition: absolute;/*must be on top of slides*/\r\n");
      out.write("\ttop: 50%;/*put in the middle of the slide*/\r\n");
      out.write("\twidth: auto;\r\n");
      out.write("\tpadding: 16px;\r\n");
      out.write("\tmargin-top: -22px;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tfont-size: 18px;\r\n");
      out.write("\ttransition: 0.6s ease;/*declare length of fade in animation */\r\n");
      out.write("\tborder-radius: 0 3px 3px 0;\r\n");
      out.write("\tuser-select: none;/*set background to a user object*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Position the \"next button\" to the right */\r\n");
      out.write(".next {\r\n");
      out.write("\tright: 0;\r\n");
      out.write("\tborder-radius: 3px 0 0 3px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* On hover, add a black background color with a little bit see-through */\r\n");
      out.write(".prev:hover, .next:hover {\r\n");
      out.write("\tbackground-color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*define container object for drop down window*/\r\n");
      out.write(".dropdown-content {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tbackground-color: #f1f1f1;\r\n");
      out.write("\twidth: 975px;\r\n");
      out.write("\theight: 0;/*start in hidden posision*/\r\n");
      out.write("\tleft: 5%;/*center drop down on main slide */\r\n");
      out.write("\toverflow-y: hidden; /* Disable virtical scroll */\r\n");
      out.write("\tbox-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n");
      out.write("\tz-index: 1; /*place on the top*/\r\n");
      out.write("\ttransition: 0.5s;/*declare length of trasision load effect*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*define text charateristics for drop down */\r\n");
      out.write(".dropdown-content p {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tpadding: 12px 16px;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\ttext-align:Center;\r\n");
      out.write("\tword-wrap: break-word;/*format text to fit into the drop down box*/\r\n");
      out.write("}");
      out.write("</style>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\" https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css\">\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://canvasjs.com/assets/script/canvasjs.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"mySidenav\" class=\"sidenav\">\r\n");
      out.write("\t\t<a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a>\r\n");
      out.write("\t\t<a onclick=\"switchStateBtn('Step1')\" href=\"javascript:void(0)\" class='menuLinks'>About</a>\r\n");
      out.write("\t\t<a onclick=\"switchStateBtn('Step2')\" href=\"javascript:void(0)\" class='menuLinks'>Services</a>\r\n");
      out.write("\t\t<a onclick=\"switchStateBtn('Step3')\" href=\"javascript:void(0)\" class='menuLinks'>Partners</a>\r\n");
      out.write("\t\t<a onclick=\"switchStateBtn('Step4')\" href=\"javascript:void(0)\" class='menuLinks'>Home</a>\r\n");
      out.write("\t\t");
      if (_jspx_meth_spring_005furl_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t<a id=\"LoadFile\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${StartURL }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class='menuLinks'>Login</a>.\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<p class=\"Headder\" style=\"font-size:30px;\">\r\n");
      out.write("\t<span style=\"font-size:30px; cursor:pointer;\" onclick=\"openNav()\" id=\"Openmenue\">&#9776;</span>\r\n");
      out.write("\t\t Welcome to the JBA Food Shipping & Tracking</p>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"Placeholder\" class=\"slideshow\" style=\"display: none;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${test}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\t<div id=\"slider\" class=\"Site_Features_List\">\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t<canvas class=\"ProductSlides\" id=\"chartContainer\"></canvas>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"Placeholder\" class=\"services\" style=\"display: none;\">\r\n");
      out.write("\t\t<div id=\"slider\" class=\"Site_Features_List\">\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t<canvas class=\"myslides\" id=\"chartClone\"></canvas>\r\n");
      out.write("\t\t\t<div class=\"navigation\">\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<a class=\"prev\" onclick=\"plusDivs(-1)\">&#10094;</a>\r\n");
      out.write("\t\t\t<a class=\"next\" onclick=\"plusDivs(1)\">&#10095;</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fforEach_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t<div id=\"myDropdown\" class=\"dropdown-content\"><p id=\"message\"></p></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div Class=\"AboutSite\" style=\"display: none;\">\r\n");
      out.write("\t\t<img id=\"CenterLine\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/FixedAssets/ComponyLogo.png\" alt=\"Logo\" width=\"300\" height=\"200\"/>\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<img id=\"CenterLine\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/FixedAssets/AaronLarch.jpg\" alt=\"Founder\" width=\"800\" height=\"900\"/>\r\n");
      out.write("\t\t<p style=\"text-align:center;\">This is our Co-founder and CEO. Aaron Larch Is a GCE Trainee built this website from scratch and designed\r\n");
      out.write("\t\t All of the features, testing, and Page displays<br>\r\n");
      out.write("\t\tHe then added an exsternal email server, added an exsternal SQL database, made a data tracker and analyser, \r\n");
      out.write("\t\tand with the help from his co founder Built a Reports page.<br>\r\n");
      out.write("\t\tClick Here to see what the sight has to offer:</p>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\tinsert button to play a video here.\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t<div id=\"SubImage\">\r\n");
      out.write("\t\t\t<img id=\"Cofounder\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/FixedAssets/BrianRodewald1.jpg\" \r\n");
      out.write("\t\t\t\tstyle=\"float: left; margin-right: 15px;\" alt=\"Co-Founder\" width=\"350\" height=\"450\"/>\r\n");
      out.write("\t\t\t<h2><br><br>\r\n");
      out.write("\t\t\tThis is our Sites co-founder</h2>\r\n");
      out.write("\t\t\t<p style=\"text-align:center;\"> Co-founder Brian built 2 web pages for this sight. He \r\n");
      out.write("\t\t\tDesinged part of the logic behind the Graphing software as well as cleaned up chart data generating subrutines.\r\n");
      out.write("\t\t\tHe also created the basic layouts for the table display page where the reports are displayed</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div><br>\r\n");
      out.write("\t\t\t\t<div id=\"SubImage\">\r\n");
      out.write("\t\t\t<img id=\"ArtConsultant\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/FixedAssets/BenGibbs.jpg\" \r\n");
      out.write("\t\t\t\tstyle=\"float: left; margin-right: 15px;\" alt=\"Co-Founder\" width=\"350\" height=\"320\"/>\r\n");
      out.write("\t\t\t<h2><br><br>\r\n");
      out.write("\t\t\tThis is our Sites Graphic Arts Consultant</h2>\r\n");
      out.write("\t\t\t<p style=\"text-align:center;\"> Ben Gibbs Is responsibule for all of the art assets for the web Site.\r\n");
      out.write("\t\t\tHe Desinged formated and cropped all of the royalty free art assets you see on this Sight. He and His\r\n");
      out.write("\t\t\tCrack team of Digial artists Worked Hard to create the artistic layout of the Entier site.</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div><br><br><br>\r\n");
      out.write("\t\t<div id=\"SubImage\">\r\n");
      out.write("\t\t\t<img id=\"Add\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/FixedAssets/ShopingInterface.PNG\" \r\n");
      out.write("\t\t\t\tstyle=\"float: right; margin-left: 15px;\" alt=\"SamplePage\" width=\"650\" height=\"325\"/>\r\n");
      out.write("\t\t\t<p style=\"text-align:Center;\"><br>\r\n");
      out.write("\t\t\tThis project started in march 2019 and went through several \r\n");
      out.write("\t\t\titerations and redesigns as features were added and the sight exspanded to include more content and features. Throghout the\r\n");
      out.write("\t\t\tevolution of this project many chalenges were overcome giving way to new code techniques and improving user security and interface.\r\n");
      out.write("\t\t\tWith each challenge the code improved in quility not just for the curent product but for futuer changes as well<br>\r\n");
      out.write("\t\t\tAdded Features include: <br>\r\n");
      out.write("\t\t\tconversion from JerseyAP to spring boot<br>\r\n");
      out.write("\t\t\toutomated Creation of a Large number data generator<br>\r\n");
      out.write("\t\t\tBlob Data storage of java objects<br>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clear\"></div><br><br>\r\n");
      out.write("\t\t<p  style=\"text-align:Center;\">To contact us for an interview please call us at 111-222-3333 or go to a place that dose not exist</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"partners\" style=\"display: none;\">\r\n");
      out.write("   <table class=\"table table-striped\" id=\"partners-Table\">\r\n");
      out.write("   <caption style=\"caption-side: top;\">Here are Some of the shipping companies we work with</caption>\r\n");
      out.write("   <thead>\r\n");
      out.write("    <th scope=\"row\">Company Name </th>\r\n");
      out.write("    <th scope=\"row\">Phone Number</th>\r\n");
      out.write("   </thead>\r\n");
      out.write("   <tbody>\r\n");
      out.write("    ");
      if (_jspx_meth_c_005fforEach_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("   </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\twindow.onload = function () {loadChannel(\".services\", \".slideshow\", \".partners\", \".AboutSite\", \"Step4\");}\r\n");
      out.write("\tvar slideIndex = 1;\t\r\n");
      out.write("\t\r\n");
      out.write("\t//this method is used to hide the backend funktions\r\n");
      out.write("\tPageSetUp(document.getElementById(\"mySidenav\"), slideIndex, ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Arrays.toString(Data)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/jsp/Index.jsp(8,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/jsp/Index.jsp(8,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/Index.jsp(8,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:url
    org.springframework.web.servlet.tags.UrlTag _jspx_th_spring_005furl_005f0 = (org.springframework.web.servlet.tags.UrlTag) _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.get(org.springframework.web.servlet.tags.UrlTag.class);
    boolean _jspx_th_spring_005furl_005f0_reused = false;
    try {
      _jspx_th_spring_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005furl_005f0.setParent(null);
      // /WEB-INF/jsp/Index.jsp(27,2) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}/login", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/jsp/Index.jsp(27,2) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f0.setVar("StartURL");
      int[] _jspx_push_body_count_spring_005furl_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005furl_005f0 = _jspx_th_spring_005furl_005f0.doStartTag();
        if (_jspx_th_spring_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005furl_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005furl_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005furl_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_spring_005furl_005f0);
      _jspx_th_spring_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/jsp/Index.jsp(37,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("img");
      // /WEB-INF/jsp/Index.jsp(37,3) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/Index.jsp(37,3) '${imageUrlList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${imageUrlList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("  \r\n");
            out.write("\t\t\t\t<div id=\"silde\" class=\"ProductSlides\">\r\n");
            out.write("\t\t\t\t\t<img id=\"pic\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/ImageAssets/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${img}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" alt=\"MissingImg\" width=\"800\" height=\"400\"/>\r\n");
            out.write("\t\t\t\t\t<p class=\"SlideText\"><span>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substringBefore(img, \".\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
            out.write("</span></p>\r\n");
            out.write("\t\t\t\t</div>\r\n");
            out.write("\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/jsp/Index.jsp(49,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("img");
      // /WEB-INF/jsp/Index.jsp(49,3) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/Index.jsp(49,3) '${imageUrlList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${imageUrlList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("  \r\n");
            out.write("\t\t\t\t<div id=\"silde\" class=\"myslides\">\r\n");
            out.write("\t\t\t\t\t<img id=\"pic\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/ImageAssets/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${img}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" alt=\"MissingImg\" width=\"800\" height=\"400\"/>\r\n");
            out.write("\t\t\t\t\t<p class=\"SlideText\"><span>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:substringBefore(img, \".\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
            out.write("</span></p>\r\n");
            out.write("\t\t\t\t</div>\r\n");
            out.write("\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f2_reused = false;
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /WEB-INF/jsp/Index.jsp(57,4) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setBegin(1);
      // /WEB-INF/jsp/Index.jsp(57,4) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setEnd(((java.lang.Integer) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${imageUrlList.size()+1}", int.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).intValue());
      // /WEB-INF/jsp/Index.jsp(57,4) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVarStatus("count");
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t<span class=\"badge demo badge-pill badge-outline-info\" onclick=\"currentDiv(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${count.index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\">  </span> \r\n");
            out.write("\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f2);
      _jspx_th_c_005fforEach_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f3 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f3_reused = false;
    try {
      _jspx_th_c_005fforEach_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f3.setParent(null);
      // /WEB-INF/jsp/Index.jsp(64,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setVar("words");
      // /WEB-INF/jsp/Index.jsp(64,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/Index.jsp(64,2) '${discript}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${discript}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/jsp/Index.jsp(64,2) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setVarStatus("count");
      int[] _jspx_push_body_count_c_005fforEach_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f3 = _jspx_th_c_005fforEach_005f3.doStartTag();
        if (_jspx_eval_c_005fforEach_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("  \r\n");
            out.write("\t\t<div id=\"StoreData");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${count.index}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" style=\"display:none\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${words}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</div>\r\n");
            out.write("\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f3.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f3);
      _jspx_th_c_005fforEach_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f4 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f4_reused = false;
    try {
      _jspx_th_c_005fforEach_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f4.setParent(null);
      // /WEB-INF/jsp/Index.jsp(127,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f4.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/Index.jsp(127,4) '${partners}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${partners}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/jsp/Index.jsp(127,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f4.setVar("article");
      int[] _jspx_push_body_count_c_005fforEach_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f4 = _jspx_th_c_005fforEach_005f4.doStartTag();
        if (_jspx_eval_c_005fforEach_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("     <tr>\r\n");
            out.write("      <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.companyName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("      <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.address}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("     </tr>\r\n");
            out.write("    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f4.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f4);
      _jspx_th_c_005fforEach_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f4_reused);
    }
    return false;
  }
}
