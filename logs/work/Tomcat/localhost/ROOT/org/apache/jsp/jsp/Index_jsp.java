/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.26
 * Generated at: 2020-07-07 12:49:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Arrays;

public final class Index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/jsp/../resources/js/SystemClock.js", Long.valueOf(1594041726729L));
    _jspx_dependants.put("jar:file:/C:/Users/gce/.m2/repository/org/springframework/spring-webmvc/5.1.10.RELEASE/spring-webmvc-5.1.10.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1569683330000L));
    _jspx_dependants.put("file:/C:/Users/gce/.m2/repository/org/springframework/spring-webmvc/5.1.10.RELEASE/spring-webmvc-5.1.10.RELEASE.jar", Long.valueOf(1571233170982L));
    _jspx_dependants.put("jar:file:/C:/Users/gce/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
    _jspx_dependants.put("file:/C:/Users/gce/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1571152422633L));
    _jspx_dependants.put("jar:file:/C:/Users/gce/.m2/repository/org/springframework/spring-webmvc/5.1.10.RELEASE/spring-webmvc-5.1.10.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1569683330000L));
    _jspx_dependants.put("/jsp/../resources/js/reportfunctions.js", Long.valueOf(1594042050699L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Arrays");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005fform_0026_005fmethod_005fid_005faction_005fModelAttribute;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fform_005fform_0026_005fmethod_005fid_005faction_005fModelAttribute = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fform_005fform_0026_005fmethod_005fid_005faction_005fModelAttribute.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("        \r\n");
      out.write("<html>\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write(" \r\n");
      out.write("<head>\r\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\t<title>Hello World!</title>\r\n");
      out.write("\t<script>");
      out.write("/*!\r\n");
      out.write(" * JavaScript Methods (https://github.com/Aaron-Larch/Websight-Protobuild)\r\n");
      out.write(" * Copyright 2020-2025 GCE, Inc.\r\n");
      out.write(" * Created by Aaron Larch\r\n");
      out.write(" */\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function () {\r\n");
      out.write("\t// Get a modal\r\n");
      out.write("\tthis.loadModal = function(input){\r\n");
      out.write("\t\t$(\"#AssineParamiters\").modal().on('shown.bs.modal', function (e) {loadValues(\".PopUpModal\", \".CreateNewRecord\", input)});\r\n");
      out.write("\t\tload_page('/WEB-INF/ModelLibrary.jsp #container');\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.getModal = function(){\r\n");
      out.write("\t\t$(\"#CreateNewRecord\").modal().on('shown.bs.modal');\r\n");
      out.write("\t\tload_page('/WEB-INF/ModelLibrary.jsp #container');\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\t//function to call popup window\r\n");
      out.write("\tthis.loadPopUp =function (input){\r\n");
      out.write("\t\t$(\"#PopUpModal\").modal().on('shown.bs.modal', function (e) {loadContent(input);});\r\n");
      out.write("\t\tload_page('/WEB-INF/ModelLibrary.jsp #container');\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\t//Switch states button\r\n");
      out.write("\tthis.SwichLoadout= function(a){\r\n");
      out.write("\t\tif(a==1){\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll(\".Populate\"), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll(\".display\"), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll(\".Populate\"), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t\t[].forEach.call(document.querySelectorAll('.display'), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\t//Check all function\r\n");
      out.write("\tthis.checkAll=function(source) {\r\n");
      out.write("\t\t  checkboxes = document.getElementsByName('operation');\r\n");
      out.write("\t\t  for(var i=0; i<checkboxes.length; i++) {\r\n");
      out.write("\t\t    checkboxes[i].checked = source.checked;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.renderChart();\r\n");
      out.write("})\t\r\n");
      out.write("\r\n");
      out.write("function load_page(url){$('modal-isi-body').load(url) ;}\r\n");
      out.write("\r\n");
      out.write("//Display a combination of classes based of a given variabule\r\n");
      out.write("function loadValues(class1, class2, flag){\r\n");
      out.write("\tif(flag==\"page1\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class1), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t}else if(flag==\"page2\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class2), function (i) {i.style.display=\"block\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(class1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//Select a string from an array of strings based on user input \r\n");
      out.write("function loadContent(input) {\r\n");
      out.write("\tdocument.getElementById(\"Display\").value = \"\";\r\n");
      out.write("\t//convert string into an array of strings\r\n");
      out.write("\tvar JsArray = document.getElementById('DisplayValue').innerHTML;\r\n");
      out.write("\tvar block = JsArray.substring(1, JsArray.length-1);\r\n");
      out.write("\tvar string = block.split(\"break\");\r\n");
      out.write("\tif(input > 0){ //Search array\r\n");
      out.write("\t\tvar quickfix=string[input].substring(2, string[input].length);\r\n");
      out.write("\t\tdocument.getElementById('Display').value=quickfix;\r\n");
      out.write("\t}else{document.getElementById('Display').value=string[input];}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function loadChannel(cl1, cl2, cl3, cl4, flag){\r\n");
      out.write("\tif(flag==\"Step1\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t}else if(flag==\"Step2\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t}else if(flag==\"Step3\"){\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl2), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl4), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl1), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t\t[].forEach.call(document.querySelectorAll(cl3), function (i) {i.style.display=\"none\";});\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function buildReport(\r\n");
      out.write("\t\txAxsis,\r\n");
      out.write("\t\tbellData,\r\n");
      out.write("\t\thighData,\r\n");
      out.write("\t\tlowData,\r\n");
      out.write("\t\tboxData,\r\n");
      out.write("\t\tbarXAxis,\r\n");
      out.write("\t\tHistogramData) {\r\n");
      out.write("\t/*Chart program layouts as found on https://www.chartjs.org/samples/latest/*/\r\n");
      out.write("\t new Chart(\"BellcurveChart\", {\r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: xAxsis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: bellData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Bell Curve Graph'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t new Chart(\"HighLineGraph\", {\r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: xAxsis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: highData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Data Graph from high to low'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t new Chart(\"LowLineGraph\", {\r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: xAxsis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: lowData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Data Graph from low to high'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t new Chart(\"HistogramChart\", {\r\n");
      out.write("\t\t  type: 'bar',\r\n");
      out.write("\t\t  data: {\r\n");
      out.write("\t\t    labels: barXAxis,\r\n");
      out.write("\t\t    datasets: [{ \r\n");
      out.write("\t\t        data: HistogramData,\r\n");
      out.write("\t\t        label: document.getElementById(\"divName\").innerHTML,\r\n");
      out.write("\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t        fill: false\r\n");
      out.write("\t\t      }]\r\n");
      out.write("\t\t  },\r\n");
      out.write("\t\t  options: {\r\n");
      out.write("\t\t    title: {\r\n");
      out.write("\t\t      display: true,\r\n");
      out.write("\t\t      text: 'Histogram Chart'\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t \r\n");
      out.write("\t var chart = new CanvasJS.Chart(\"BoxandWhisker\", {\r\n");
      out.write("\t\t\ttitle:{\r\n");
      out.write("\t\t\t\ttext: \"Box And Whisker Plot\"\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\taxisY: {\r\n");
      out.write("\t\t\t\tinterval: 40\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdata: [{\r\n");
      out.write("\t\t\t\ttype: \"boxAndWhisker\",\r\n");
      out.write("\t\t\t\tupperBoxColor: \"#FFC28D\",\r\n");
      out.write("\t\t\t\tlowerBoxColor: \"#9ECCB8\",\r\n");
      out.write("\t\t\t\tcolor: \"black\",\r\n");
      out.write("\t\t\t\tdataPoints: [\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t{ label: document.getElementById(\"divName\").innerHTML, y: boxData }\r\n");
      out.write("\t\t\t\t]\r\n");
      out.write("\t\t\t}]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tchart.render();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function renderChart(input) {\r\n");
      out.write("\t/*Chart program layouts as found on https://www.chartjs.org/samples/latest/*/\r\n");
      out.write("\t  var chart = new Chart(\"chartContainer\", { \r\n");
      out.write("\t\t  type: 'line',\r\n");
      out.write("\t\t\t  data: {\r\n");
      out.write("\t\t\t    labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\r\n");
      out.write("\t\t\t    datasets: [{ \r\n");
      out.write("\t\t\t        data: input,\r\n");
      out.write("\t\t\t        label: 'My first dataset',\r\n");
      out.write("\t\t\t        borderColor: \"#3e95cd\",\r\n");
      out.write("\t\t\t        fill: false\r\n");
      out.write("\t\t\t     }]\r\n");
      out.write("\t\t\t  },\r\n");
      out.write("\t\t\t  options: {\r\n");
      out.write("\t\t\t    title: {\r\n");
      out.write("\t\t\t      display: true,\r\n");
      out.write("\t\t\t      text: 'This site can also track Large volumes of data over time and place them into graphs using CharJS software'\r\n");
      out.write("\t                    }\r\n");
      out.write("\t                }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t  chart.render();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://canvasjs.com/assets/script/canvasjs.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h2 class=\"hello-title\">This is a home page to launch the project proper</h2>\r\n");
      out.write("    <p>Insert into here a fancy page to sell the compony and what it dose</p>\r\n");
      out.write("    <div id=\"Placeholder\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${test}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("    <div class=\"Sight Features List\" style=\"max-width:500px\">sell all lego</div>\r\n");
      out.write("    <img src=\"/ImageAssets/Beverages.png\" alt=\"Beverage\" id=\"pic\" />\r\n");
      out.write("    <canvas class=\"MySlides\" id=\"chartContainer\"  style=\"height: 300px; width: 100%;\"></canvas>\r\n");
      out.write("    ");
      if (_jspx_meth_spring_005furl_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("  \t<a id=\"LoadFile\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${StartURL }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" >Login</a>.\r\n");
      out.write("\t\t");
      if (_jspx_meth_spring_005furl_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t");
      if (_jspx_meth_form_005fform_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("<div class=\"page\">\r\n");
      out.write("    <header>\r\n");
      out.write("      <h1>LOLCAT CLOCK</h1>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <h4>\r\n");
      out.write("      I CAN HAZ TIME?? <br>\r\n");
      out.write("      <span id=\"clock\">Clock goes here</span>\r\n");
      out.write("    </h4>\r\n");
      out.write("\r\n");
      out.write("    <img id=\"lolcatImage\" src=\"https://s3.amazonaws.com/media.skillcrush.com/skillcrush/wp-content/uploads/2016/08/normalTime.jpg\" alt=\"lolcat\">\r\n");
      out.write("\r\n");
      out.write("    <blockquote id=\"timeEvent\">This is where time events are reported</blockquote>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    set Wake Up Time\r\n");
      out.write("    <select id=\"wakeUpTimeSelector\">\r\n");
      out.write("      <option value=\"1\">1 AM - 2AM</option>\r\n");
      out.write("      <option value=\"2\">2 AM - 3AM</option>\r\n");
      out.write("      <option value=\"3\">3 AM - 4AM</option>\r\n");
      out.write("      <option value=\"4\">4 AM - 5AM</option>\r\n");
      out.write("      <option value=\"5\">5 AM - 6AM</option>\r\n");
      out.write("      <option value=\"6\">6 AM - 7AM</option>\r\n");
      out.write("      <option value=\"7\">7 AM - 8AM</option>\r\n");
      out.write("      <option value=\"8\" selected>8 AM - 9AM</option>\r\n");
      out.write("      <option value=\"9\">9 AM - 10AM</option>\r\n");
      out.write("      <option value=\"10\">10 AM - 11AM</option>\r\n");
      out.write("      <option value=\"11\">11 AM - 12PM</option>\r\n");
      out.write("      <option value=\"12\">12 PM - 1PM</option>\r\n");
      out.write("      <option value=\"13\">1 PM - 2PM</option>\r\n");
      out.write("      <option value=\"14\">2 PM - 3PM</option>\r\n");
      out.write("      <option value=\"15\">3 PM - 4PM</option>\r\n");
      out.write("      <option value=\"16\">4 PM - 5PM</option>\r\n");
      out.write("      <option value=\"17\">5 PM - 6PM</option>\r\n");
      out.write("      <option value=\"18\">6 PM - 7PM</option>\r\n");
      out.write("      <option value=\"19\">7 PM - 8PM</option>\r\n");
      out.write("      <option value=\"20\">8 PM - 9PM</option>\r\n");
      out.write("      <option value=\"21\">9 PM - 10PM</option>\r\n");
      out.write("      <option value=\"22\">10 PM - 11PM</option>\r\n");
      out.write("      <option value=\"23\">11 PM - 12AM</option>\r\n");
      out.write("      <option value=\"24\">12 AM - 1AM</option>\r\n");
      out.write("    </select>\r\n");
      out.write("    <br>\r\n");
      out.write("    set Lunch Time\r\n");
      out.write("      <select id=\"lunchTimeSelector\">\r\n");
      out.write("        <option value=\"1\">1 AM - 2AM</option>\r\n");
      out.write("        <option value=\"2\">2 AM - 3AM</option>\r\n");
      out.write("        <option value=\"3\">3 AM - 4AM</option>\r\n");
      out.write("        <option value=\"4\">4 AM - 5AM</option>\r\n");
      out.write("        <option value=\"5\">5 AM - 6AM</option>\r\n");
      out.write("        <option value=\"6\">6 AM - 7AM</option>\r\n");
      out.write("        <option value=\"7\">7 AM - 8AM</option>\r\n");
      out.write("        <option value=\"8\">8 AM - 9AM</option>\r\n");
      out.write("        <option value=\"9\">9 AM - 10AM</option>\r\n");
      out.write("        <option value=\"10\">10 AM - 11AM</option>\r\n");
      out.write("        <option value=\"11\">11 AM - 12PM</option>\r\n");
      out.write("        <option value=\"12\" selected>12 PM - 1PM</option>\r\n");
      out.write("        <option value=\"13\">1 PM - 2PM</option>\r\n");
      out.write("        <option value=\"14\">2 PM - 3PM</option>\r\n");
      out.write("        <option value=\"15\">3 PM - 4PM</option>\r\n");
      out.write("        <option value=\"16\">4 PM - 5PM</option>\r\n");
      out.write("        <option value=\"17\">5 PM - 6PM</option>\r\n");
      out.write("        <option value=\"18\">6 PM - 7PM</option>\r\n");
      out.write("        <option value=\"19\">7 PM - 8PM</option>\r\n");
      out.write("        <option value=\"20\">8 PM - 9PM</option>\r\n");
      out.write("        <option value=\"21\">9 PM - 10PM</option>\r\n");
      out.write("        <option value=\"22\">10 PM - 11PM</option>\r\n");
      out.write("        <option value=\"23\">11 PM - 12AM</option>\r\n");
      out.write("        <option value=\"24\">12 AM - 1AM</option>\r\n");
      out.write("      </select>\r\n");
      out.write("    <br>\r\n");
      out.write("    set Nap Time\r\n");
      out.write("    <select id=\"napTimeSelector\">\r\n");
      out.write("      <option value=\"1\">1 AM - 2AM</option>\r\n");
      out.write("      <option value=\"2\">2 AM - 3AM</option>\r\n");
      out.write("      <option value=\"3\">3 AM - 4AM</option>\r\n");
      out.write("      <option value=\"4\">4 AM - 5AM</option>\r\n");
      out.write("      <option value=\"5\">5 AM - 6AM</option>\r\n");
      out.write("      <option value=\"6\">6 AM - 7AM</option>\r\n");
      out.write("      <option value=\"7\">7 AM - 8AM</option>\r\n");
      out.write("      <option value=\"8\">8 AM - 9AM</option>\r\n");
      out.write("      <option value=\"9\">9 AM - 10AM</option>\r\n");
      out.write("      <option value=\"10\">10 AM - 11AM</option>\r\n");
      out.write("      <option value=\"11\">11 AM - 12PM</option>\r\n");
      out.write("      <option value=\"12\">12 PM - 1PM</option>\r\n");
      out.write("      <option value=\"13\">1 PM - 2PM</option>\r\n");
      out.write("      <option value=\"14\">2 PM - 3PM</option>\r\n");
      out.write("      <option value=\"15\" selected>3 PM - 4PM</option>\r\n");
      out.write("      <option value=\"16\">4 PM - 5PM</option>\r\n");
      out.write("      <option value=\"17\">5 PM - 6PM</option>\r\n");
      out.write("      <option value=\"18\">6 PM - 7PM</option>\r\n");
      out.write("      <option value=\"19\">7 PM - 8PM</option>\r\n");
      out.write("      <option value=\"20\">8 PM - 9PM</option>\r\n");
      out.write("      <option value=\"21\">9 PM - 10PM</option>\r\n");
      out.write("      <option value=\"22\">10 PM - 11PM</option>\r\n");
      out.write("      <option value=\"23\">11 PM - 12AM</option>\r\n");
      out.write("      <option value=\"24\">12 AM - 1AM</option>\r\n");
      out.write("      </select>\r\n");
      out.write("    <br>\r\n");
      out.write("    <button id=\"partyTimeButton\">Party!</button>\r\n");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("      <p>&copy; Skillcrush 2016</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("  </div>\r\n");
      out.write("  <script>\r\n");
      out.write("  ");
      out.write("var wakeuptime = 7;\r\n");
      out.write("var noon = 12;\r\n");
      out.write("var lunchtime = 12;\r\n");
      out.write("var naptime = lunchtime + 2;\r\n");
      out.write("var partytime;\r\n");
      out.write("var evening = 18;\r\n");
      out.write("var oneSecond = 1000; // Define a second\r\n");
      out.write("\r\n");
      out.write("// Getting it to show the current time on the page\r\n");
      out.write("var showCurrentTime = function()\r\n");
      out.write("{\r\n");
      out.write("    // display the string on the webpage\r\n");
      out.write("    var clock = document.getElementById('clock');\r\n");
      out.write(" \r\n");
      out.write("    var currentTime = new Date();\r\n");
      out.write(" \r\n");
      out.write("    var hours = currentTime.getHours();\r\n");
      out.write("    var minutes = currentTime.getMinutes();\r\n");
      out.write("    var seconds = currentTime.getSeconds();\r\n");
      out.write("    var meridian = \"AM\";\r\n");
      out.write(" \r\n");
      out.write("    // Set hours\r\n");
      out.write("\t  if (hours >= noon)\r\n");
      out.write("\t  {\r\n");
      out.write("\t\t  meridian = \"PM\";\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\t  if (hours > noon)\r\n");
      out.write("\t  {\r\n");
      out.write("\t\t  hours = hours - 12;\r\n");
      out.write("\t  }\r\n");
      out.write(" \r\n");
      out.write("    // Set Minutes\r\n");
      out.write("    if (minutes < 10)\r\n");
      out.write("    {\r\n");
      out.write("        minutes = \"0\" + minutes;\r\n");
      out.write("    }\r\n");
      out.write(" \r\n");
      out.write("    // Set Seconds\r\n");
      out.write("    if (seconds < 10)\r\n");
      out.write("    {\r\n");
      out.write("        seconds = \"0\" + seconds;\r\n");
      out.write("    }\r\n");
      out.write(" \r\n");
      out.write("    // put together the string that displays the time\r\n");
      out.write("    var clockTime = hours + ':' + minutes + ':' + seconds + \" \" + meridian + \"!\";\r\n");
      out.write("    clock.innerText = clockTime;\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("// Getting the clock to increment on its own and change out messages and pictures\r\n");
      out.write("var updateClock = function() \r\n");
      out.write("{\r\n");
      out.write("  var time = new Date().getHours();\r\n");
      out.write("  var messageText;\r\n");
      out.write("  var image = \"https://s3.amazonaws.com/media.skillcrush.com/skillcrush/wp-content/uploads/2016/08/normalTime.jpg\";\r\n");
      out.write("\r\n");
      out.write("  var timeEventJS = document.getElementById(\"timeEvent\");\r\n");
      out.write("  var lolcatImageJS = document.getElementById('lolcatImage');\r\n");
      out.write("  \r\n");
      out.write("  if (time == partytime)\r\n");
      out.write("  {\r\n");
      out.write("    image = \"https://s3.amazonaws.com/media.skillcrush.com/skillcrush/wp-content/uploads/2016/08/partyTime.jpg\";\r\n");
      out.write("    messageText = \"Let's party!\";\r\n");
      out.write("  }\r\n");
      out.write("  else if (time == wakeuptime)\r\n");
      out.write("  {\r\n");
      out.write("    image = \"https://s3.amazonaws.com/media.skillcrush.com/skillcrush/wp-content/uploads/2016/09/cat1.jpg\";\r\n");
      out.write("    messageText = \"Wake up!\";\r\n");
      out.write("  }\r\n");
      out.write("  else if (time == lunchtime)\r\n");
      out.write("  {\r\n");
      out.write("    image = \"https://s3.amazonaws.com/media.skillcrush.com/skillcrush/wp-content/uploads/2016/09/cat2.jpg\";\r\n");
      out.write("    messageText = \"Let's have some lunch!\";\r\n");
      out.write("  }\r\n");
      out.write("  else if (time == naptime)\r\n");
      out.write("  {\r\n");
      out.write("    image = \"https://s3.amazonaws.com/media.skillcrush.com/skillcrush/wp-content/uploads/2016/09/cat3.jpg\";\r\n");
      out.write("    messageText = \"Sleep tight!\";\r\n");
      out.write("  }\r\n");
      out.write("  else if (time < noon)\r\n");
      out.write("  {\r\n");
      out.write("    image = \"https://pbs.twimg.com/profile_images/378800000532546226/dbe5f0727b69487016ffd67a6689e75a.jpeg\";\r\n");
      out.write("    messageText = \"Good morning!\";\r\n");
      out.write("  }\r\n");
      out.write("  else if (time >= evening)\r\n");
      out.write("  {\r\n");
      out.write("    image = \"https://upload.wikimedia.org/wikipedia/commons/8/8c/Cat_sleep.jpg\";\r\n");
      out.write("    messageText = \"Good evening!\";\r\n");
      out.write("  }\r\n");
      out.write("  else\r\n");
      out.write("  {\r\n");
      out.write("    image = \"https://s3.amazonaws.com/media.skillcrush.com/skillcrush/wp-content/uploads/2016/08/normalTime.jpg\";\r\n");
      out.write("    messageText = \"Good afternoon!\";\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  console.log(messageText); \r\n");
      out.write("  timeEventJS.innerText = messageText;\r\n");
      out.write("  lolcatImage.src = image;\r\n");
      out.write("  \r\n");
      out.write("  showCurrentTime();\r\n");
      out.write("};\r\n");
      out.write("updateClock();\r\n");
      out.write("\r\n");
      out.write("// Getting the clock to increment once a second\r\n");
      out.write("setInterval( updateClock, oneSecond);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// Getting the Party Time Button To Work\r\n");
      out.write("var partyButton = document.getElementById(\"partyTimeButton\");\r\n");
      out.write("\r\n");
      out.write("var partyEvent = function()\r\n");
      out.write("{\r\n");
      out.write("    if (partytime < 0) \r\n");
      out.write("    {\r\n");
      out.write("        partytime = new Date().getHours();\r\n");
      out.write("        partyTimeButton.innerText = \"Party Over!\";\r\n");
      out.write("        partyTimeButton.style.backgroundColor = \"#0A8DAB\";\r\n");
      out.write("    }\r\n");
      out.write("    else\r\n");
      out.write("    {\r\n");
      out.write("        partytime = -1;\r\n");
      out.write("        partyTimeButton.innerText = \"Party Time!\";\r\n");
      out.write("        partyTimeButton.style.backgroundColor = \"#222\";\r\n");
      out.write("    }\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("partyButton.addEventListener(\"click\", partyEvent);\r\n");
      out.write("partyEvent(); \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// Activates Wake-Up selector\r\n");
      out.write("var wakeUpTimeSelector =  document.getElementById(\"wakeUpTimeSelector\");\r\n");
      out.write("\r\n");
      out.write("var wakeUpEvent = function()\r\n");
      out.write("{\r\n");
      out.write("    wakeuptime = wakeUpTimeSelector.value;\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("wakeUpTimeSelector.addEventListener(\"change\", wakeUpEvent);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// Activates Lunch selector\r\n");
      out.write("var lunchTimeSelector =  document.getElementById(\"lunchTimeSelector\");\r\n");
      out.write("\r\n");
      out.write("var lunchEvent = function()\r\n");
      out.write("{\r\n");
      out.write("    lunchtime = lunchTimeSelector.value;\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("lunchTimeSelector.addEventListener(\"change\", lunchEvent);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// Activates Nap-Time selector\r\n");
      out.write("var napTimeSelector =  document.getElementById(\"napTimeSelector\");\r\n");
      out.write("\r\n");
      out.write("var napEvent = function()\r\n");
      out.write("{\r\n");
      out.write("    naptime = napTimeSelector.value;\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("napTimeSelector.addEventListener(\"change\", napEvent);\r\n");
      out.write("\r\n");
      out.write("function SlidShow() {\r\n");
      out.write("\t  var i;\r\n");
      out.write("\t  var x = document.getElementsByClassName(\"mySlides\");\r\n");
      out.write("\t  for (i = 0; i < x.length; i++) {\r\n");
      out.write("\t    x[i].style.display = \"none\";  \r\n");
      out.write("\t  }\r\n");
      out.write("\t  myIndex++;\r\n");
      out.write("\t  if (myIndex > x.length) {myIndex = 1}    \r\n");
      out.write("\t  x[myIndex-1].style.display = \"block\";  \r\n");
      out.write("\t  setTimeout(carousel, (oneSecond*2)); // Change image every 2 seconds\r\n");
      out.write("}");
      out.write("\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\trenderChart(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Arrays.toString(Data)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\r\n");
      out.write("\t});\r\n");
      out.write("  </script>\r\n");
      out.write("  \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /jsp/Index.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /jsp/Index.jsp(7,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/jsp/Index.jsp(7,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:url
    org.springframework.web.servlet.tags.UrlTag _jspx_th_spring_005furl_005f0 = (org.springframework.web.servlet.tags.UrlTag) _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.get(org.springframework.web.servlet.tags.UrlTag.class);
    boolean _jspx_th_spring_005furl_005f0_reused = false;
    try {
      _jspx_th_spring_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005furl_005f0.setParent(null);
      // /jsp/Index.jsp(25,4) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}/login", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /jsp/Index.jsp(25,4) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f0.setVar("StartURL");
      int[] _jspx_push_body_count_spring_005furl_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005furl_005f0 = _jspx_th_spring_005furl_005f0.doStartTag();
        if (_jspx_th_spring_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005furl_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005furl_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005furl_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_spring_005furl_005f0);
      _jspx_th_spring_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:url
    org.springframework.web.servlet.tags.UrlTag _jspx_th_spring_005furl_005f1 = (org.springframework.web.servlet.tags.UrlTag) _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.get(org.springframework.web.servlet.tags.UrlTag.class);
    boolean _jspx_th_spring_005furl_005f1_reused = false;
    try {
      _jspx_th_spring_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_spring_005furl_005f1.setParent(null);
      // /jsp/Index.jsp(27,2) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f1.setValue("/TestPage");
      // /jsp/Index.jsp(27,2) name = var type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005furl_005f1.setVar("invoice");
      int[] _jspx_push_body_count_spring_005furl_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005furl_005f1 = _jspx_th_spring_005furl_005f1.doStartTag();
        if (_jspx_th_spring_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005furl_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005furl_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005furl_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005furl_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_spring_005furl_005f1);
      _jspx_th_spring_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_spring_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005fform_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:form
    org.springframework.web.servlet.tags.form.FormTag _jspx_th_form_005fform_005f0 = (org.springframework.web.servlet.tags.form.FormTag) _005fjspx_005ftagPool_005fform_005fform_0026_005fmethod_005fid_005faction_005fModelAttribute.get(org.springframework.web.servlet.tags.form.FormTag.class);
    boolean _jspx_th_form_005fform_005f0_reused = false;
    try {
      _jspx_th_form_005fform_005f0.setPageContext(_jspx_page_context);
      _jspx_th_form_005fform_005f0.setParent(null);
      // /jsp/Index.jsp(28,2) null
      _jspx_th_form_005fform_005f0.setDynamicAttribute(null, "ModelAttribute", "testVal");
      // /jsp/Index.jsp(28,2) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f0.setMethod("post");
      // /jsp/Index.jsp(28,2) name = action type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f0.setAction((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${invoice}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /jsp/Index.jsp(28,2) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f0.setId("my_form");
      int[] _jspx_push_body_count_form_005fform_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_form_005fform_005f0 = _jspx_th_form_005fform_005f0.doStartTag();
        if (_jspx_eval_form_005fform_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t<label>Amount Purchased</label>\r\n");
            out.write("\t\t<input type=\"text\" name=\"testVal\" form=\"my_form\" />\r\n");
            out.write("\t\t<button type=\"submit\" class=\"btn btn-primary\" form=\"my_form\">Save</button> \r\n");
            out.write("\t\t");
            int evalDoAfterBody = _jspx_th_form_005fform_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_form_005fform_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005fform_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005fform_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005fform_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005fform_0026_005fmethod_005fid_005faction_005fModelAttribute.reuse(_jspx_th_form_005fform_005f0);
      _jspx_th_form_005fform_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005fform_005f0, _jsp_getInstanceManager(), _jspx_th_form_005fform_005f0_reused);
    }
    return false;
  }
}
